/*******************************************************************************//*******************************************************************************/class Person isbegin    var name: string = "N/A";    var lib: object;    /***************************************************************************/    routine construct(var n: string): object    begin        this->name = n;        this->lib = lload("/Users/malcolmhall/Repos/RonaScript/examples/ffi_example/libHello.dylib");        return this;    end    /***************************************************************************/    routine GetName(): string    begin        return this->name;    end    /***************************************************************************/    routine SetName(var n: string): void    begin        this->name = n;    end    /***************************************************************************/    routine Hello(): string    begin        return this->lib->hello();    endend // class Personfor (var f: int = 0; f < 1; f++):routine Foo(var s: string): voidbegin    print(s);endroutine Bar(var c: callable, var d: string): voidbegin    c(d);endBar(Foo, "This is a test");//var a: array = [1, 2, [3, 4, 5, [6, [7, [8]]]]];//print(a[2][3][1]);////var malcolm: object = Person("Dave");//print(malcolm->GetName());//malcolm->SetName("Malcolm");//print(malcolm->GetName());//malcolm->name = "Malcolm";//print("After setting: ", malcolm->name);//////var d: float = 1.099342342342;////print(d);////print(lib->hello());////print(lib->__name__);////exit 99;//end//for (var i: int = 0; i < 10000; i++)://    print("Value: ", i);//endroutine gcf(var x: int, var y: int): intbegin    if (y == 0):        return x;    else:        return gcf(y, x % y);    endendvar results: array = [    gcf(12, 46),    gcf(72, 144)];print(results);